% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/unifiers.R
\name{lightgbm.unify}
\alias{lightgbm.unify}
\title{Unify LightGBM model}
\usage{
lightgbm.unify(lgb_model)
}
\arguments{
\item{lgb_model}{A lightgbm model - object of class \code{lgb.Booster}}
}
\value{
Each row of a returned data frame indicates a specific node. The object has a defined structure:
\describe{
\item{Tree}{0-indexed ID of a tree}
\item{Node}{0-indexed ID of a node in a tree}
\item{Feature}{In case of an internal node - name of a feature to split on. Otherwise - NA}
\item{Split}{Threshold used for splitting observations.
All observations with lower or equal value than it are proceeded to the node marked as 'Yes'. Otherwise to the 'No' node}
\item{Yes}{Index of a row containing a child Node. Thanks to explicit indicating the row it is much faster to move between nodes.}
\item{No}{Index of a row containing a child Node}
\item{Missing}{Index of a row containing a child Node where are proceeded all observations with no value of the dividing feature}
\item{Quality/Score}{For internal nodes - Quality: Split gain of a node.
For leaves - Score: Value of prediction in the leaf}
\item{Cover}{Number of observations seen by the internal node or collected by the leaf}
}
}
\description{
Convert your xgboost model into a standarised data frame.
The returned data frame is easy to be interpreted by user and ready to be used as an argument in the \code{treeshap()} function.
}
\examples{
#library(lightgbm)
#library(Matrix)
#param_lgbm <- list(objective = "regression", max_depth = 2,  force_row_wise = TRUE)
#data_fifa <- fifa20$data[!colnames(fifa20$data) \%in\%
#              c('work_rate', 'value_eur', 'gk_diving', 'gk_handling',
#              'gk_kicking', 'gk_reflexes', 'gk_speed', 'gk_positioning')]
# data <- na.omit(cbind(data_fifa, fifa20$target))
# sparse_data <- as(as.matrix(data[,-ncol(data)]), 'sparseMatrix')
# x <- lightgbm::lgb.Dataset(sparse_data, label = as(as.matrix(data[,ncol(data)]), 'sparseMatrix'))
# lgb_data <- lightgbm::lgb.Dataset.construct(x)
# lgb_model <- lightgbm::lightgbm(data = lgb_data, params = param_lgbm, save_name = "", verbose = 0)
# unified_model <- lightgbm.unify(lgb_model)
# shaps <- treeshap(unified_model, data[1:2,])
# plot_contribution(shaps[1,])
}
\seealso{
\code{\link{xgboost.unify}} for \code{XGBoost models}

\code{\link{gbm.unify}} for \code{GBM models}

\code{\link{catboost.unify}} for \code{Catboost models}
}
