% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/treeshap.R
\name{treeshap}
\alias{treeshap}
\title{Calculate SHAP values of a tree ensemble model.}
\usage{
treeshap(model, x, interactions = FALSE)
}
\arguments{
\item{model}{Unified data.frame representation of the model created with a (model).unify function.}

\item{x}{Observations to be explained. A data.frame object with the same columns as in the training set of the model. Keep in mind that objects different than data.frame or plain matrix will cause an error or unpredictable behaviour.}

\item{interactions}{Whether to calculate SHAP interaction values. By default is \code{FALSE}.}
}
\value{
If \code{interactions = FALSE} then \emph{SHAP values} for given observations. A dataframe with the same columns as in the training set of the model.
Value from a column and a row is the SHAP value of the feature of the observation.

If \code{interactions = TRUE} then \emph{SHAP interaction values} for given observations.
A 3 dimensional array, where third dimension corresponds to the observation, and every 2d slice is a matrix containing SHAP interaction values for this observation.
}
\description{
Check the structure of your ensemble model and calculate feature importance using \code{treeshap()} function.
}
\examples{
\dontrun{
library(xgboost)
data <- fifa20$data[colnames(fifa20$data) != 'work_rate']
target <- fifa20$target

# calculating simple SHAP values
param <- list(objective = "reg:squarederror", max_depth = 3)
xgb_model <- xgboost::xgboost(as.matrix(data), params = param, label = target, nrounds = 200,
                              verbose = 0)
unified_model <- xgboost.unify(xgb_model)
shaps <- treeshap(unified_model, head(data, 3))
plot_contribution(shaps[1, ])

# It's possible to calcualte explanation over different part of the data set

unified_model_rec <- recalculate_covers(unified_model, data[1:1000, ])
shaps_rec <- treeshap(unified_model, head(data, 3))
plot_contribution(shaps_rec[1, ])

# calculating SHAP interaction values
param2 <- list(objective = "reg:squarederror", max_depth = 20)
xgb_model2 <- xgboost::xgboost(as.matrix(data), params = param2, label = target, nrounds = 10)
unified_model2 <- xgboost.unify(xgb_model2)
treeshap(unified_model2, head(data, 3), interactions = TRUE)
}
}
\seealso{
\code{\link{xgboost.unify}} for \code{XGBoost models}
\code{\link{lightgbm.unify}} for \code{LightGBM models}
\code{\link{gbm.unify}} for \code{GBM models}
\code{\link{catboost.unify}} for \code{catboost models}
\code{\link{randomForest.unify}} for \code{randomForest models}
\code{\link{ranger.unify}} for \code{ranger models}
}
